{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf600
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\froman\fcharset0 Times-Roman;\f2\fswiss\fcharset0 Helvetica-Bold;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue233;\red251\green0\blue7;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c93333;\cssrgb\c100000\c12195\c0;}
\margl1440\margr1440\vieww15320\viewh22280\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs32 \cf0 6/29/20\
AA Data Structures/Algorithms Notes\
9- Stacks and Queues Notes\
\pard\pardeftab720\sl280\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://open.appacademy.io/learn/self-study/data-structures-and-algorithms/stacks-and-queues-notes"}}{\fldrslt 
\f1\fs24 \cf2 \expnd0\expndtw0\kerning0
\ul \ulc2 \outl0\strokewidth0 \strokec2 https://open.appacademy.io/learn/self-study/data-structures-and-algorithms/stacks-and-queues-notes}}\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f2\b \cf0 1. \cf3 Stacks
\f0\b0 \cf0 \
	- They\'92re ADT\'92s (Abstract Data Structures)\
	- Follows LIFO (Last In First Out). Last node added to a stack is always the first node removed.\
	   Helps to think about it visually like a vertical stack of cards. \
	- can use an Array to implement the stack\
	- Has typically has 2 Methods\
		- .push()		O(1) Time.  adds to top of stack, returns new length\
		- .pop()		O(1) Time.  removes from top of stack, returns node removed\
		note* search and access average/worst time complexities are O(N) just like linked list\
	- Properties\
		- .length		property (num items in stack)\
		- .top		first node in stack (analogous to Head in linked list)\
		- .bottom 		(optional bottom node in stack. Analogous to Tail in linked list)\
	- Very similar to linked list (each node has next and value property)\
	\
\
	- When to use: \
		- \
\
\
\
\

\f2\b \
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\b0 \cf0 QUESTIONS\
- NEED TO GO OVER DOUBLY LINKED LIST BASIC METHODS (removeNode, removeTail\'85)\
- Need to go over advantages/disadvantages of singly/doubly/multiply/circular linked lists
\f2\b \

\f0\b0 - Need to go over hasCycles problem (assuming we don\'92t have access to linked list)
\f2\b \

\f0\b0 \
\
}